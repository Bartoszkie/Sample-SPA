{"version":3,"sources":["sass/base/components-styles/app.styles.js","components/particles/particles.component.jsx","redux/movie-results/movie-results.types.js","redux/movie-results/movie-results.action.js","redux/movie-results/movie-results.utils.js","components/header/header.styles.js","sass/base/_typography.styles.js","components/header/header.component.jsx","components/movie-item/movie-item.styles.js","components/movie-item/movie-item.component.jsx","components/movie-details/movie-details.styles.js","components/movie-details/movie-details.component.jsx","redux/movie-results/movie-results.selector.js","components/movie-results/movie-results.styles.js","components/movie-results/movie-results.component.jsx","components/footer/footer.styles.js","components/footer/footer.component.jsx","App.js","redux/movie-results/movie-results.reducer.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["AppContainer","styled","section","ParticlesComponent","className","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","MovieResultsTypes","FETCH_MOVIE_DETAILS","FETCH_MOVIES_BEGIN","FETCH_MOVIES_SUCCES","FETCH_MOVIES_FAILURE","fetchMoviesBegin","fetchMoviesSuccess","movies","payload","fetchMoviesFailure","error","API_KEY","HeaderContainer","FormContainer","form","InputField","input","SubmitButton","button","H1","h1","H2","h2","H4","PButton","p","Header","state","inputValue","console","log","this","onSubmit","e","preventDefault","setMovieResults","props","onChange","setState","target","React","Component","connect","dispatch","a","fetch","getAPIS","json","apiTOJSON","returnedValues","Search","getIDS","map","item","imdbID","Promise","all","id","then","fetchInfo","sort","b","imdbRating","MovieItemContainer","li","InfoItem","span","MovieItem","title","year","rating","MovieDetailsContainer","div","Poster","MovieDesctipion","MovieDetails","poster","alt","description","selectMovies","movieResults","selectMoviesArray","createSelector","fetchedItems","selectMoviesLoading","loading","selectErrors","selectMovieInfo","movieDetails","MovieResultsContainer","LoadingContainer","ResultsContainer","DetailsContainer","MovieResults","errors","showMovieInfo","length","key","shortid","generate","Title","Year","onClick","Plot","mapStateToProps","createStructuredSelector","FooterContainer","CopyrightText","Footer","App","INITIAL_STATE","MovieResultsReducer","action","rootReducer","combineReducers","movieResultsReducer","middlewares","logger","thunk","store","createStore","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd456e28.chunk.js","sourcesContent":["import styled from 'styled-components'; \r\n\r\nexport const AppContainer = styled.section`\r\n    display: grid; \r\n    grid-template-rows: min-content 1fr 8vh; \r\n    grid-template-columns: [full-start] minmax(6rem, 1fr) [center-start] repeat(8, [col-start] minmax(min-content, 24rem) [col-end]) [center-end] minmax(6rem, 1fr) [full-end];\r\n    height: 100vh;\r\n`;","import React from 'react';\r\n\r\nimport './particles.styles.scss';\r\n\r\nimport Particles from \"react-particles-js\";\r\n\r\nconst ParticlesComponent = () => {\r\n    return (\r\n    <Particles\r\n      className=\"particles\"\r\n      params={{\r\n        particles: {\r\n          number: {\r\n            value: 160,\r\n            density: {\r\n              enable: true,\r\n              value_area: 800\r\n            }\r\n          },\r\n          color: {\r\n            value: \"#fff\"\r\n          },\r\n          shape: {\r\n            type: \"circle\",\r\n            stroke: { width: 0, color: \"#000000\" },\r\n            polygon: { nb_sides: 5 },\r\n            image: { src: \"img/github.svg\", width: 100, height: 100 }\r\n          },\r\n          opacity: {\r\n            value: 1,\r\n            random: true,\r\n            anim: { enable: true, speed: 1, opacity_min: 0, sync: false }\r\n          },\r\n          size: {\r\n            value: 3,\r\n            random: true,\r\n            anim: { enable: false, speed: 4, size_min: 0.3, sync: false }\r\n          },\r\n          line_linked: {\r\n            enable: false,\r\n            distance: 150,\r\n            color: \"#ffffff\",\r\n            opacity: 0.4,\r\n            width: 1\r\n          },\r\n          move: {\r\n            enable: true,\r\n            speed: 1,\r\n            direction: \"none\",\r\n            random: true,\r\n            straight: false,\r\n            out_mode: \"out\",\r\n            bounce: false,\r\n            attract: { enable: false, rotateX: 600, rotateY: 600 }\r\n          }\r\n        },\r\n        interactivity: {\r\n          detect_on: \"canvas\",\r\n          events: {\r\n            onhover: { enable: true, mode: \"bubble\" },\r\n            onclick: { enable: true, mode: \"repulse\" },\r\n            resize: true\r\n          },\r\n          modes: {\r\n            grab: { distance: 400, line_linked: { opacity: 1 } },\r\n            bubble: {\r\n              distance: 250,\r\n              size: 0,\r\n              duration: 2,\r\n              opacity: 0,\r\n              speed: 3\r\n            },\r\n            repulse: { distance: 400, duration: 0.4 },\r\n            push: { particles_nb: 4 },\r\n            remove: { particles_nb: 2 }\r\n          }\r\n        },\r\n        retina_detect: true\r\n      }}\r\n    />\r\n    );\r\n}\r\n\r\nexport default ParticlesComponent;","export const MovieResultsTypes = {\r\n    FETCH_MOVIE_DETAILS: 'FETCH_MOVIE_DETAILS',\r\n    FETCH_MOVIES_BEGIN: 'FETCH_MOVIES_BEGIN', \r\n    FETCH_MOVIES_SUCCES: 'FETCH_MOVIES_SUCCESS', \r\n    FETCH_MOVIES_FAILURE: 'FETCH_MOVIES_FAILURE'\r\n} ","import {MovieResultsTypes} from './movie-results.types';\r\n\r\nexport const setMovieResults = results => ({\r\n    type: MovieResultsTypes.FETCH_MOVIE_TITLES,\r\n    payload: results\r\n})\r\n\r\nexport const fetchMoviesBegin = () => ({\r\n    type: MovieResultsTypes.FETCH_MOVIES_BEGIN\r\n})\r\n\r\nexport const fetchMoviesSuccess = movies => ({\r\n    type: MovieResultsTypes.FETCH_MOVIES_SUCCES, \r\n    payload: {movies}\r\n})\r\n\r\nexport const fetchMoviesFailure = error => ({\r\n    type: MovieResultsTypes.FETCH_MOVIES_FAILURE, \r\n    payload: {error}\r\n})\r\n\r\nexport const movieDetails = movie => ({\r\n    type: MovieResultsTypes.FETCH_MOVIE_DETAILS, \r\n    payload: movie\r\n})","//API CALL - omdbapi \r\nimport {fetchMoviesBegin, fetchMoviesSuccess, fetchMoviesFailure} from '../movie-results/movie-results.action';\r\n\r\nconst API_KEY = \"d14e23d0\";\r\n\r\nexport function getResults(inputValue) {\r\n    return async (dispatch) => {\r\n\r\n      dispatch(fetchMoviesBegin());\r\n\r\n      try {\r\n          dispatch(fetchMoviesBegin());\r\n\r\n          const getAPIS = await fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&s=${inputValue}`);\r\n          const apiTOJSON = await getAPIS.json();\r\n\r\n          //Array ID's assignment\r\n          const returnedValues = apiTOJSON.Search;\r\n          const getIDS = returnedValues.map(item => item.imdbID);\r\n\r\n          //Array full of fetched items info\r\n          const fetchInfo = await Promise.all(getIDS.map(id => fetch(`http://www.omdbapi.com/?apikey=${API_KEY}&i=${id}`)\r\n              .then(item => item.json())));\r\n\r\n          //Here is the sorted array full of movies with details \r\n          fetchInfo.sort((a, b) => (a.imdbRating > b.imdbRating) ? -1 : 1);\r\n          dispatch(fetchMoviesSuccess(fetchInfo));\r\n      }\r\n      catch (error) {\r\n          dispatch(fetchMoviesFailure(error));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const addMovieInfo = (movies, movieToDisplay) => {\r\n    const isMovie = movies.find(item => item.imdbID === movieToDisplay.imdbID);\r\n    if(isMovie) return movieToDisplay;\r\n} \r\n\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.section`\r\n  grid-column: full-start / full-end;\r\n  grid-row: 1 / 2;\r\n\r\n  display: grid;\r\n  grid-template-columns: minmax(6rem, 1fr) repeat(8, minmax(min-content, 24rem)) minmax(\r\n      6rem,\r\n      1fr\r\n    );\r\n\r\n  grid-template-rows: repeat(2, min-content);\r\n\r\n  color: #fff;\r\n\r\n  background-color: transparent;\r\n\r\n  h1 {\r\n    font-family: \"Lobster\", cursive;\r\n    color: #950740;\r\n    grid-column: 2 / 4;\r\n    grid-row: 1 / 2;\r\n\r\n    @media only screen and (max-width: 75em) {\r\n      grid-column: 1 / 11;\r\n      grid-row: 1 / 2;\r\n      justify-self: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FormContainer = styled.form`\r\n  justify-self: center;\r\n  align-self: center;\r\n  grid-column: 5 / 7;\r\n  grid-row: 1 / 2;\r\n\r\n  @media only screen and (max-width: 75em) {\r\n    grid-column: 1 / 11;\r\n    grid-row: 2 / 3;\r\n  }\r\n`;\r\n\r\nexport const InputField = styled.input`\r\n  text-align: left;\r\n\r\n  width: 30rem;\r\n  height: 5rem;\r\n\r\n  outline: none;\r\n\r\n  padding-left: 2rem;\r\n\r\n  border-left: 0.2rem solid #950740;\r\n  border-top: 0.2rem solid #950740;\r\n  border-right: none;\r\n  border-bottom: 0.2rem solid #950740;\r\n\r\n  border-radius: 10rem 0 0 10rem;\r\n\r\n  @media only screen and (max-width: 37.5em) {\r\n    width: 18rem;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  position: relative;\r\n  display: inline-block;\r\n\r\n  background-color: transparent;\r\n  color: white;\r\n\r\n  width: 10rem;\r\n  height: 5rem;\r\n\r\n  cursor: pointer;\r\n\r\n  outline: none;\r\n\r\n  border-top: 0.2rem solid #950740;\r\n  border-right: 0.2rem solid #950740;\r\n  border-bottom: 0.2rem solid #950740;\r\n  border-left: none;\r\n  border-radius: 0 10rem 10rem 0;\r\n\r\n  p {\r\n    font-size: 1.5rem;\r\n    letter-spacing: 0.2rem;\r\n    text-shadow: none;\r\n    transition: 0.1s ease-in-out all;\r\n  }\r\n\r\n  &:hover p {\r\n    text-shadow: #fff 0px 0px 5px, #fff 0px 0px 10px, #fff 0px 0px 15px,\r\n      #ff2d95 0px 0px 20px, #ff2d95 0px 0px 30px, #ff2d95 0px 0px 40px,\r\n      #ff2d95 0px 0px 50px, #ff2d95 0px 0px 75px,\r\n      -5px -5px 10px rgba(206, 206, 206, 0);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const H1 = styled.h1`\r\n  font-size: 6rem;\r\n  font-weight: 100;\r\n\r\n  @media only screen and (max-width: 56.25em) {\r\n        font-size: 4rem; /* 900px */\r\n    }\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  font-size: 4.5rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nexport const H4 = styled.h1`\r\n  font-size: 2rem;\r\n  font-weight: 400;\r\n`;\r\n\r\nexport const PButton = styled.p`\r\n  display: inline-block;\r\n  font-family: 'Staatliches', cursive;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport \"../../sass/base/_variables.styles.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { getResults } from \"../../redux/movie-results/movie-results.utils\";\r\n\r\nimport {\r\n  HeaderContainer,\r\n  FormContainer,\r\n  InputField,\r\n  SubmitButton\r\n} from \"./header.styles\";\r\nimport { H1, PButton} from \"../../sass/base/_typography.styles\";\r\n\r\nclass Header extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      inputValue: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.inputValue);\r\n\r\n    const handleChange = e => {\r\n      this.setState({\r\n        inputValue: e.target.value\r\n      });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n      e.preventDefault();\r\n      const { setMovieResults } = this.props;\r\n      setMovieResults(this.state.inputValue);\r\n    };\r\n\r\n    return (\r\n      <HeaderContainer>\r\n        <H1>Movie Rank</H1>\r\n        <FormContainer type=\"submit\" onSubmit={handleSubmit}>\r\n          <InputField onChange={handleChange}></InputField>\r\n          <SubmitButton><PButton>Search</PButton></SubmitButton>\r\n        </FormContainer>\r\n      </HeaderContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setMovieResults: value => dispatch(getResults(value))\r\n});\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import styled from 'styled-components';\r\n\r\nexport const MovieItemContainer = styled.li`\r\n    padding: .5rem .9rem;\r\n\r\n    background-color: white;\r\n\r\n    border: .1rem solid #950740;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &:not(:last-child) {\r\n        margin-bottom: 1rem;\r\n    }\r\n\r\n    cursor: pointer;\r\n    transition: .2s ease-in-out all;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n`;\r\n\r\nexport const InfoItem = styled.span`\r\n    margin-left: auto;\r\n`;","import React from 'react';\r\n\r\nimport {MovieItemContainer, InfoItem} from './movie-item.styles';\r\n\r\nconst MovieItem = (props) => {\r\n    return (\r\n        <MovieItemContainer {...props}>\r\n            <InfoItem>{props.title} {props.year}</InfoItem>\r\n            <InfoItem>{props.rating}</InfoItem>\r\n        </MovieItemContainer>\r\n    );\r\n}\r\n\r\nexport default MovieItem;","import styled from 'styled-components';\r\n\r\nexport const MovieDetailsContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-rows: repeat(3, 20rem);\r\n`;\r\n\r\nexport const Poster = styled.div`\r\n    grid-column: 1 / 2;\r\n    grid-row: 1 / 4;\r\n\r\n    align-self: center;\r\n    justify-self: center;\r\n\r\n    img {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        border: none;\r\n        box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);\r\n    }\r\n\r\n`;\r\n\r\nexport const MovieDesctipion = styled.div`\r\n    grid-column: 2 / 3;\r\n    grid-row: 2 / 3;\r\n\r\n    color: white;\r\n\r\n    align-self: center;\r\n    justify-self: center;\r\n`;","import React from \"react\";\r\n\r\nimport {\r\n  MovieDetailsContainer,\r\n  Poster,\r\n  MovieDesctipion\r\n} from \"./movie-details.styles\";\r\n\r\nimport { H4 } from \"../../sass/base/_typography.styles\";\r\n\r\nconst MovieDetails = props => {\r\n  return (\r\n    <MovieDetailsContainer>\r\n      <Poster>\r\n        <img src={props.poster} alt=\" \"></img>\r\n      </Poster>\r\n      <MovieDesctipion>\r\n        <H4>{props.description}</H4>\r\n      </MovieDesctipion>\r\n    </MovieDetailsContainer>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import {createSelector} from 'reselect';\r\n\r\nconst selectMovies = state => state.movieResults;\r\n\r\nexport const selectMoviesArray = createSelector(\r\n    [selectMovies], \r\n    movieResults => movieResults.fetchedItems\r\n);\r\n\r\nexport const selectMoviesLoading = createSelector(\r\n    [selectMovies], \r\n    movieResults => movieResults.loading\r\n);\r\n\r\nexport const selectErrors = createSelector(\r\n    [selectMovies], \r\n    movieResults => movieResults.error\r\n);\r\n\r\nexport const selectMovieInfo = createSelector(\r\n    [selectMovies], \r\n    movieResults => movieResults.movieDetails\r\n);","import styled from \"styled-components\";\r\n\r\nexport const MovieResultsContainer = styled.section`\r\n  grid-column: center-start / center-end;\r\n  grid-row: 2 / 3;\r\n\r\n  background-color: transparent;\r\n\r\n  display: grid;\r\n  grid-gap: 5rem;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: 1fr;\r\n  justify-content: center;\r\n  align-content: center;\r\n\r\n  position: relative;\r\n\r\n  @media only screen and (max-width: 37.5em) {\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n  }\r\n`;\r\n\r\nexport const LoadingContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  h2 {\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport const ResultsContainer = styled.div`\r\n  width: 100%;\r\n\r\n  grid-column: 1 / 2;\r\n  grid-row: 1 / 2;\r\n\r\n  @media only screen and (max-width: 37.5em) {\r\n    grid-column: 1 / 2;\r\n    grid-row: 1 / 2;\r\n  }\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  background-color: transparent;\r\n\r\n  ol {\r\n    width: 100%;\r\n    list-style: none;\r\n    counter-reset: custom-styling;\r\n\r\n    li {\r\n      height: 5.5rem;\r\n      counter-increment: custom-styling;\r\n\r\n      &::before {\r\n        content: counter(custom-styling);\r\n        color: black;\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DetailsContainer = styled.div`\r\n    grid-column: 2 / 3;\r\n    grid-row: 2 / 3;\r\n    background-color: transparent;\r\n`;\r\n","import React from \"react\";\r\nimport shortid from \"shortid\";\r\n\r\n//COMPONENTS\r\nimport MovieItem from \"../movie-item/movie-item.component\";\r\nimport MovieDetails from \"../movie-details/movie-details.component\";\r\n\r\n//REDUX\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectMoviesArray,\r\n  selectMoviesLoading,\r\n  selectErrors,\r\n  selectMovieInfo\r\n} from \"../../redux/movie-results/movie-results.selector\";\r\n\r\nimport { movieDetails } from \"../../redux/movie-results/movie-results.action\";\r\n\r\nimport { createStructuredSelector } from \"reselect\";\r\n\r\n//STYLES\r\nimport {\r\n  MovieResultsContainer,\r\n  LoadingContainer,\r\n  ResultsContainer,\r\n  DetailsContainer\r\n} from \"./movie-results.styles\";\r\n\r\nimport { H2 } from \"../../sass/base/_typography.styles\";\r\n\r\nclass MovieResults extends React.Component {\r\n  render() {\r\n    const {\r\n      fetchedItems,\r\n      loading,\r\n      errors,\r\n      movieDetails,\r\n      showMovieInfo\r\n    } = this.props;\r\n\r\n    console.log(\"movie-results info: \", movieDetails);\r\n\r\n    return (\r\n      <MovieResultsContainer>\r\n        {loading === true ? (\r\n          <LoadingContainer>\r\n            <H2>Loading...</H2>\r\n          </LoadingContainer>\r\n        ) : null}\r\n\r\n        {errors !== null ? (\r\n          <LoadingContainer>\r\n            <H2>No results :(</H2>\r\n          </LoadingContainer>\r\n        ) : null}\r\n\r\n        {fetchedItems.length !== 0 && loading === false ? (\r\n          <ResultsContainer>\r\n            <ol>\r\n              {fetchedItems.movies.map(item => (\r\n                <MovieItem\r\n                  key={shortid.generate()}\r\n                  title={item.Title}\r\n                  rating={item.imdbRating}\r\n                  year={item.Year}\r\n                  onClick={() => showMovieInfo(item)}\r\n                />\r\n              ))}\r\n            </ol>\r\n          </ResultsContainer>\r\n        ) : null}\r\n\r\n        {movieDetails.length !== 0 && loading !== true ? (\r\n          <DetailsContainer>\r\n            { \r\n              <MovieDetails poster={movieDetails.Poster} description={movieDetails.Plot} />\r\n            }\r\n          </DetailsContainer>\r\n        ) : null}\r\n      </MovieResultsContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  fetchedItems: selectMoviesArray,\r\n  loading: selectMoviesLoading,\r\n  errors: selectErrors,\r\n  movieDetails: selectMovieInfo\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showMovieInfo: item => dispatch(movieDetails(item))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MovieResults);\r\n","import styled from 'styled-components';\r\n\r\nexport const FooterContainer = styled.section`\r\n    grid-column: full-start / full-end;\r\n    grid-row: 3 / 4;\r\n    background-color: black;\r\n\r\n    border-top: .1rem solid #fc4445;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const CopyrightText = styled.div`\r\n    color: white;\r\n`;\r\n","import React from 'react';\r\n\r\nimport {FooterContainer, CopyrightText} from './footer.styles';\r\nimport {H4, PButton} from '../../sass/base/_typography.styles';\r\n\r\nconst Footer = () => (\r\n    <FooterContainer>\r\n    <CopyrightText>\r\n        <H4>Handmande by <PButton>Bartoszkie</PButton></H4>\r\n    </CopyrightText>\r\n    </FooterContainer>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\n//STYLES\r\nimport \"../src/sass/main.scss\";\r\nimport { AppContainer } from \"../src/sass/base/components-styles/app.styles\";\r\nimport ParticlesComponent from \"./components/particles/particles.component\";\r\n\r\n//COMPONENTS\r\nimport Header from \"./components/header/header.component\";\r\nimport MovieResults from \"./components/movie-results/movie-results.component\";\r\nimport Footer from \"./components/footer/footer.component\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppContainer>\r\n      <ParticlesComponent />\r\n      <Header />\r\n      <MovieResults />\r\n      <Footer />\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { MovieResultsTypes } from \"./movie-results.types\";\r\nimport { getResults, addMovieInfo } from \"./movie-results.utils\";\r\n\r\nconst INITIAL_STATE = {\r\n  fetchedItems: [],\r\n  loading: false,\r\n  error: null, \r\n  movieDetails: []\r\n};\r\n\r\nconst MovieResultsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case MovieResultsTypes.FETCH_MOVIES_BEGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null, \r\n        movieDetails: []\r\n      };\r\n    case MovieResultsTypes.FETCH_MOVIES_SUCCES:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        fetchedItems: action.payload\r\n      };\r\n    case MovieResultsTypes.FETCH_MOVIES_FAILURE: \r\n    return {\r\n        ...state, \r\n        loading: false, \r\n        error: action.payload, \r\n        fetchedItems: []\r\n    }\r\n    case MovieResultsTypes.FETCH_MOVIE_DETAILS: \r\n    return {\r\n      ...state, \r\n      movieDetails: action.payload\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default MovieResultsReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport movieResultsReducer from \"./movie-results/movie-results.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  movieResults: movieResultsReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './root-reducer';\r\n\r\nconst middlewares = [logger, thunk];\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}